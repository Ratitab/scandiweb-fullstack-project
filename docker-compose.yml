networks:
  scandiweb_fullstack_default:
    driver: bridge

services:
  backend:
    container_name: backend
    build:
      context: ./fullstack-test-starter
      dockerfile: Dockerfile
    volumes:
      - ./fullstack-test-starter:/var/www/html
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=scandiweb_ecommerce
      - DB_USER=root
      - DB_PASS=xutjerA@0098
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    networks:
      - scandiweb_fullstack_default

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: xutjerA@0098
      MYSQL_DATABASE: scandiweb_ecommerce
    volumes:
      - mysql_data:/var/lib/mysql
      - ./nginx/sql:/docker-entrypoint-initdb.d 
    command: ["sh", "-c", "docker-entrypoint.sh mysqld & sleep 10 && sh /docker-entrypoint-initdb.d/scripts/init-database.sh & while true; do sleep 86400 && sh /docker-entrypoint-initdb.d/scripts/export-orders.sh; done"]
    networks:
      - scandiweb_fullstack_default

  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - scandiweb_fullstack_default

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - scandiweb_fullstack_default
    # Tag the built image for reuse in Nginx
    image: frontend-build:latest

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "8000:8000"
    depends_on:
      - frontend
      - backend
    networks:
      - scandiweb_fullstack_default

volumes:
  mysql_data:
